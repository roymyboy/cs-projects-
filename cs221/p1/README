****************
* Project 1 
* MagicSquare
* CompSci 221
* 6th Sept 2015
* Utsav Roy
**************** 

PROJECT OVERVIEW:

This Java application is a Magic Square of size N x N. It runs on
console as well as it creates a new text file to print out result.  

INCLUDED FILES:

 * README - this file
 * MagicSquare.java -  class with Methods
 * MagicSquareTester.java - Driver class
 
BUILDING AND RUNNING:

All project files should be in the same directory.

From the directory containing the .java source code, compile the program:
    $ javac MagicSquare.java
    $ Javac MagicSquareTester.java

Run the program from the directory containing MagicSquareTester.class:
    $ java MagicSquareTester

You will need to provide the parameters as follows:

           $ java MagicSquareTester [-create | -check] [filename] [size]
            
         * -create flag, to create a Magic Square in the text file of dimension
            size*size where size must be odd.
	 * -check flag, to check the validity of the file

PROJECT DESIGN NOTES:

MagicSquareTester class is the driver class for this program. It configures a magic square 
of from the give command line of given dimension and name of the file. it prints out a magic
square where  each rows columns and front diagonal backwards diagonals adds up to the same
number as the following formula
            n(n*n+1)/2 , where n is the given dimension of the magic square.
            
The user has choices whether they can create a magic square in a text file or check if a text
file contains a magic square.

The other class is MagicSquare which contains one constructor, two public method and three private
method as follows:

*public MagicSquare(String filename, int n)
    Constructor that takes in two variable as string and integer to 
    create a magic square.

*public void checkMatrix()
    It calls in the readMatrix() which is private class

*private void readMatrix(File inputFile)
    It consists of the read method which reads the containts of the given file
    through the command line. It also has the code to check the matrix validity.
    It runs through each row, column, front diagonal, back wards diagonal
    and equate it to the magic number generated by the formula:  n(n*n+1)/2. Once
    it checks the validity depending on the result it prints out either "is a magic
    square" or "is not a magic square". Its also has the private method.

*Public void createMagicSquare(int size)
    This method has the code to generate the magicsquare of any dimension in text file 
    using private writeMatrix method. Its takes in integer as an argument.

*Private void writeMatrix(File filename, int square[][])
    It takes in two variable, file and int to run. It has the code to
    create and write into a new file, this private method is used by the createMagicSquare().
    
*private void printMatrix(int square[][])
    It takes int as a variable to run. It has code to print out the magicsquare 
    from the file into the console. This private method is used by readMatrix().
    
All this methods and constructor are further called by the tester file to run the program.
    

TESTING:

For testing the program I used different numbers of arguments just to see
if the program was giving errors for unmatched arguments and it did just
as expected. I also checked if the problem was handled if there was 
a mismatch in filename or file format type, it looked like it handled 
those exceptions and gave the user a message that they need to check the
filename of their input file. I checked with an even grid dimension of the 
magic square and it printed out the message on the console to give an odd 
grid dimension.

I used the following parameters to check: 

-check invalidSquare.txt
-check notIntegers.txt
-check validSquare.txt

-create magic.txt 5
-create magic.txt 4
-create magic.txt 101

DISCUSSION:

I personally enjoyed doing this project though i spent alot more time than 
i should but it was worth it. I feel like i did not  understood alot in cs121 
so it was fun making mistakes and fixing it myself. i got alot of
help from tutor and friends. I came across problems while testing file, so 
most of the time i spent was in debugging the program, while debugging i 
understood that alot of my code was unnessary. Alot of the time i would null.pointer, 
figuring out to print magicsquare it self was pretty easy but printing out in the 
different file was kind of tricky.






























